---
on:
  workflow_call:
    inputs:
      repository_owner:
        description: 'Username of the GitHub repository owner. For Example value of `github.repository_owner` variable or "octocat".'
        required: true
        type: string
      repository:
        description: 'Path of the GitHub repository. For example value of "github.repository" variable or "octocat/reponame".'
        required: true
        type: string
      ref:
        description: 'GitHub ref. For example value of "github.ref" variable.'
        required: true
        type: string
      actor:
        description: 'GitHub actor. For example value of "github.actor" variable.'
        required: true
        type: string
    secrets:
      token:
        description: 'GitHub token. For example value of "secrets.GITHUB_TOKEN" variable.'
        required: true
jobs:
  docker:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v3.0.0
      - uses: docker/setup-buildx-action@v1.6.0
      - uses: docker/login-action@v1.14.1
        if: inputs.actor != 'dependabot[bot]'
        with:
          registry: ghcr.io
          username: ${{ inputs.repository_owner }}
          password: ${{ secrets.github_token }}
      - uses: docker/metadata-action@v3.6.2
        id: meta
        with:
          images: ghcr.io/${{ inputs.repository }}
          github-token: ${{ secrets.github_token }}
          flavor: |
            latest=auto
          tags: |
            type=sha
            type=ref,event=pr
            type=semver,pattern={{raw}}
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}},enable=${{ !startsWith(inputs.ref, 'refs/tags/v0.0.') }}
            type=semver,pattern={{major}},enable=${{ !startsWith(inputs.ref, 'refs/tags/v0.') }}
            type=raw,value=latest,enable=${{ github.ref == format('refs/heads/{0}', github.event.repository.default_branch) }}
      - uses: docker/build-push-action@v2.10.0
        with:
          context: .
          platforms: linux/amd64
          push: ${{ inputs.actor != 'dependabot[bot]' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            BUILDTIME=${{ fromJSON(steps.meta.outputs.json).labels['org.opencontainers.image.created'] }}
            VERSION=${{ fromJSON(steps.meta.outputs.json).labels['org.opencontainers.image.version'] }}
            REVISION=${{ fromJSON(steps.meta.outputs.json).labels['org.opencontainers.image.revision'] }}
